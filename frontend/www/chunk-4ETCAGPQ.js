import{a as o,b as i}from"./chunk-B4WDAWNQ.js";import{a as l,f as h}from"./chunk-64PFJSTE.js";import{a as n}from"./chunk-RW4GY4BD.js";var b=(()=>{let u=class u{constructor(){this.usuariosSubject=new l([]),this.usuarios$=this.usuariosSubject.asObservable()}getAllUsuarios(){let s=`${i.url}usuarios`;return o.get({url:s,headers:{"Content-Type":"application/json"}}).then(a=>{if(a.status===404||a.status===401)throw{status:a.status,message:a.data.error};let t=a.data;return this.usuariosSubject.next(t),t}).catch(a=>{throw console.error("Error al obtener usuarios:",a),a})}getUsuarioById(s){let a=`${i.url}usuarios/${s}`;return o.get({url:a,headers:{"Content-Type":"application/json"}}).then(t=>{if(t.status===404||t.status===401)throw{status:t.status,message:t.data.error};return t.data}).catch(t=>{throw console.error("Error al obtener usuario:",t),t})}updateUsuarioSinPass(s,a){let t=`${i.url}usuarios/sin-password`;return o.put({url:t,headers:{"Content-Type":"application/json"},data:a}).then(r=>{if(r.status===404||r.status===401)throw{status:r.status,message:r.data.error};return this.actualizarUsuarioEnLista(s,r.data),console.log(r.data),r.data}).catch(r=>{throw console.error("Error al actualizar usuario sin contrase\xF1a:",r),r})}updateUsuarioConPass(s,a){let t=`${i.url}usuarios/con-password`;return o.put({url:t,headers:{"Content-Type":"application/json"},data:a}).then(r=>{if(r.status===404||r.status===401)throw{status:r.status,message:r.data.error};return this.actualizarUsuarioEnLista(s,r.data),r.data}).catch(r=>{throw console.error("Error al actualizar usuario con contrase\xF1a:",r),r})}actualizarUsuarioEnLista(s,a){let r=this.usuariosSubject.getValue().map(c=>c.id===s?n(n({},c),a):c);this.usuariosSubject.next(r)}deleteUsuario(s){let a=`${i.url}usuarios/${s}`;return o.delete({url:a,headers:{"Content-Type":"application/json"}}).then(t=>{if(t.status===404||t.status===401)throw{status:t.status,message:t.data.error};this.removerUsuarioDeLista(s)}).catch(t=>{throw console.error("Error al eliminar usuario:",t),t})}removerUsuarioDeLista(s){let a=this.usuariosSubject.getValue().filter(t=>t.id!==s);this.usuariosSubject.next(a)}};u.\u0275fac=function(a){return new(a||u)},u.\u0275prov=h({token:u,factory:u.\u0275fac,providedIn:"root"});let e=u;return e})();export{b as a};
