import{a as s,b as u}from"./chunk-X2VJEU3B.js";import{a as l,f as i}from"./chunk-OOWOQ5GQ.js";import{a as d}from"./chunk-RW4GY4BD.js";var m=(()=>{let e=class e{constructor(){this.trabajadoresSubject=new l([]),this.trabajadores$=this.trabajadoresSubject.asObservable()}getTrabajadoresByUsuarioId(t){let r=`${u.url}trabajadores/${t}`;return s.get({url:r,headers:{"Content-Type":"application/json"}}).then(a=>{if(console.log("Trabajadores obtenidos:",a),a.status===404||a.status===401)throw{status:a.status,message:a.data.error};return this.trabajadoresSubject.next(a.data),a.data}).catch(a=>{throw console.error("Error al obtener trabajadores:",a),a})}getTrabajadorById(t){let r=`${u.url}trabajadores/trabajador/${t}`;return s.get({url:r,headers:{"Content-Type":"application/json"}}).then(a=>{if(console.log("Trabajadores obtenidos:",a),a.status===404||a.status===401)throw{status:a.status,message:a.data.error};return a.data}).catch(a=>{throw console.error("Error al obtener trabajadores:",a),a})}createTrabajador(t){let r=`${u.url}trabajadores`;return console.log(t),s.post({url:r,headers:{"Content-Type":"application/json"},data:t}).then(a=>{let o=this.trabajadoresSubject.getValue();if(this.trabajadoresSubject.next([...o,a.data]),a.status===404||a.status===401)throw{status:a.status,message:a.data.error};return a.data}).catch(a=>{throw console.error("Error al crear trabajador:",a),a})}updateTrabajador(t,r){let a=`${u.url}trabajadores/${t}`;return console.log(r),s.put({url:a,headers:{"Content-Type":"application/json"},data:r}).then(o=>{if(console.log("Trabajador actualizado:",o),o.status===404||o.status===401)throw{status:o.status,message:o.data.error};return this.reemplazarTrabajador(t,r),o.data}).catch(o=>{throw console.error("Error al actualizar trabajador:",o),o})}deleteTrabajador(t){let r=`${u.url}trabajadores/${t}`;return s.delete({url:r,headers:{"Content-Type":"application/json"}}).then(a=>{if(console.log("Trabajador eliminado:",a),a.status===404||a.status===401)throw{status:a.status,message:a.data.error};return this.borrarTrabajador(t),a.data}).catch(a=>{throw console.error("Error al eliminar trabajador:",a),a})}reemplazarTrabajador(t,r){let a=this.trabajadoresSubject.getValue().map(o=>o.id===t?d(d({},o),r):o);this.trabajadoresSubject.next(a)}borrarTrabajador(t){let r=this.trabajadoresSubject.getValue().filter(a=>a.id!==t);this.trabajadoresSubject.next(r)}};e.\u0275fac=function(r){return new(r||e)},e.\u0275prov=i({token:e,factory:e.\u0275fac,providedIn:"root"});let c=e;return c})();export{m as a};
